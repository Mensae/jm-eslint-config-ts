// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`eslint-config-ts should match the snapshot 1`] = `
{
  "ignorePatterns": [
    "*.d.ts",
  ],
  "overrides": [
    {
      "extends": [
        "plugin:import/typescript",
        "@jm/eslint-config-ts-for-js",
      ],
      "files": [
        "*.ts",
        "*.tsx",
        "*.mts",
        "*.cts",
        "*.vue",
      ],
      "plugins": [
        "import",
        "etc",
        "total-functions",
      ],
      "rules": {
        "@shopify/typescript/prefer-singular-enums": "error",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "warn",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/ban-tslint-comment": "warn",
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/class-literal-property-style": "warn",
        "@typescript-eslint/consistent-generic-constructors": "warn",
        "@typescript-eslint/consistent-indexed-object-style": [
          "warn",
          "index-signature",
        ],
        "@typescript-eslint/consistent-type-assertions": [
          "warn",
          {
            "assertionStyle": "never",
          },
        ],
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/dot-notation": "warn",
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "warn",
        "@typescript-eslint/no-confusing-non-null-assertion": "warn",
        "@typescript-eslint/no-duplicate-enum-values": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": "warn",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-invalid-void-type": "warn",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-magic-numbers": [
          "error",
          {
            "enforceConst": true,
            "ignore": [
              0,
              1,
            ],
            "ignoreClassFieldInitialValues": true,
            "ignoreDefaultValues": true,
            "ignoreEnums": true,
            "ignoreNumericLiteralTypes": true,
            "ignoreReadonlyClassProperties": true,
            "ignoreTypeIndexes": true,
          },
        ],
        "@typescript-eslint/no-meaningless-void-operator": [
          "warn",
          {
            "checkNever": true,
          },
        ],
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-mixed-enums": "warn",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "warn",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "allow": [
              "defaultStatus",
              "event",
              "find",
              "length",
              "name",
              "status",
            ],
            "builtinGlobals": true,
          },
        ],
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-throw-literal": [
          "warn",
          {
            "allowThrowingAny": false,
            "allowThrowingUnknown": false,
          },
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-condition": "warn",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-declaration-merging": "warn",
        "@typescript-eslint/no-unsafe-enum-comparison": "warn",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "enforceForJSX": true,
          },
        ],
        "@typescript-eslint/no-unused-vars": [
          "warn",
          {
            "args": "after-used",
            "argsIgnorePattern": "^ignore$",
            "caughtErrors": "all",
            "vars": "all",
            "varsIgnorePattern": "^ignore$",
          },
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "ignoreTypeReferences": false,
          },
        ],
        "@typescript-eslint/no-useless-constructor": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "warn",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-literal-enum-member": "warn",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": [
          "warn",
          {
            "ignoreTernaryTests": false,
          },
        ],
        "@typescript-eslint/prefer-optional-chain": "warn",
        "@typescript-eslint/prefer-readonly-parameter-types": [
          "error",
          {
            "ignoreInferredTypes": true,
          },
        ],
        "@typescript-eslint/prefer-reduce-type-parameter": "warn",
        "@typescript-eslint/prefer-return-this-type": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",
        "@typescript-eslint/prefer-ts-expect-error": "warn",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": [
          "error",
          {
            "checkCompoundAssignments": true,
          },
        ],
        "@typescript-eslint/restrict-template-expressions": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "warn",
        "constructor-super": "off",
        "dot-notation": "off",
        "etc/no-assign-mutated-array": "error",
        "etc/no-commented-out-code": "error",
        "etc/no-const-enum": "error",
        "etc/no-deprecated": "error",
        "etc/no-enum": "error",
        "etc/no-implicit-any-catch": "error",
        "etc/no-internal": "error",
        "etc/no-misused-generics": "error",
        "etc/no-t": "error",
        "etc/prefer-interface": [
          "error",
          {
            "allowIntersection": false,
          },
        ],
        "getter-return": "off",
        "import/extensions": [
          "error",
          "never",
        ],
        "import/max-dependencies": [
          "error",
          {
            "ignoreTypeImports": true,
          },
        ],
        "import/no-unused-modules": [
          "error",
          {
            "missingExports": false,
            "unusedExports": true,
          },
        ],
        "no-array-constructor": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-empty-function": "off",
        "no-extra-semi": "off",
        "no-func-assign": "off",
        "no-implied-eval": "off",
        "no-import-assign": "off",
        "no-loss-of-precision": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-this-before-super": "off",
        "no-throw-literal": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-unused-vars": "off",
        "no-useless-constructor": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "require-await": "off",
        "total-functions/no-nested-fp-ts-effects": "error",
        "total-functions/no-partial-array-reduce": "error",
        "total-functions/no-partial-division": "error",
        "total-functions/no-partial-string-normalize": "error",
        "total-functions/no-partial-url-constructor": "error",
        "total-functions/no-premature-fp-ts-effects": "error",
        "total-functions/no-unsafe-readonly-mutable-assignment": "error",
        "total-functions/require-strict-mode": "error",
        "valid-typeof": "off",
      },
      "settings": {
        "import/parsers": {
          "@typescript-eslint/parser": [
            ".ts",
            ".tsx",
          ],
        },
        "import/resolver": {
          "typescript": {
            "alwaysTryTypes": true,
          },
        },
        "node": {
          "tryExtensions": [
            ".mjs",
            ".cjs",
            ".js",
            ".json",
            ".node",
            ".ts",
            ".d.ts",
          ],
        },
      },
    },
    {
      "files": [
        "**/test/**",
        "**/tests/**",
        "**/spec/**",
        "**/__tests__/**",
        "*.test.*",
        "*.spec.*",
        "*.e2e.*",
        "*.e2e-spec.*",
      ],
      "rules": {
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "allow": [
              "defaultStatus",
              "event",
              "find",
              "length",
              "name",
              "status",
              "screen",
            ],
            "builtinGlobals": true,
          },
        ],
      },
    },
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
  },
  "plugins": [
    "@typescript-eslint",
  ],
  "rules": {
    "import/no-unused-modules": "off",
  },
}
`;
